This file is "rendered" when `dx init` is invoked, because it has the `.hbs` extension
It is rendered using the [handlebars](https://handlebarsjs.com/) Node.js view engine.

Inside any file with the `.hbs` extension you have access to the context (like the project or stack objects) as well as the user options.
For example:
- project: \{{ project.name }}
- stack: \{{ stack.name }}
- override files user option: \{{ userOptions.override }}

If you want to see/debug the properties provided to the command's template files, you can use:

\{{{ json this }}}

which will render something like:
```
{
  project: {
    name: 'name of the project',
    features: ['an array of features enabled with "dx add" commands'],
  },
  stack: {
    name: 'name of the stack',
    origin: 'git repo or path where the stack came from',
    locationPath: 'location of the stack in the file system',
  },
  command: {
    name: 'name of the command',
    templatePath: 'location of the command template in the file system',
  },
  userOptions: {
    override: true/false,
  }
}
```